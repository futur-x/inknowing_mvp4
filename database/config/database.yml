# =============================================================================
# InKnowing Database Configuration
# Description: PostgreSQL connection and pool settings
# =============================================================================

default: &default
  adapter: postgresql
  encoding: utf8
  pool: 25
  timeout: 5000
  checkout_timeout: 5
  reaping_frequency: 10
  idle_timeout: 300
  min_messages: warning
  schema_search_path: "public,auth,content,dialogue,upload,payment,admin,audit"

  # Connection pool settings
  pool_settings:
    max_connections: 100
    min_connections: 5
    max_idle_time: 300
    connection_timeout: 10
    statement_timeout: 30000  # 30 seconds
    lock_timeout: 10000       # 10 seconds
    idle_in_transaction_session_timeout: 60000  # 60 seconds

  # SSL configuration
  sslmode: prefer  # disable, allow, prefer, require, verify-ca, verify-full
  sslcert: ~/.postgresql/postgresql.crt
  sslkey: ~/.postgresql/postgresql.key
  sslrootcert: ~/.postgresql/root.crt

development:
  <<: *default
  host: <%= ENV.fetch("DB_HOST", "localhost") %>
  port: <%= ENV.fetch("DB_PORT", 5432) %>
  database: <%= ENV.fetch("DB_NAME", "inknowing_db") %>
  username: <%= ENV.fetch("DB_USER", "postgres") %>
  password: <%= ENV.fetch("DB_PASSWORD", "") %>

  # Development specific settings
  min_messages: debug
  log_min_duration_statement: 100  # Log queries taking > 100ms
  log_connections: true
  log_disconnections: true

test:
  <<: *default
  host: <%= ENV.fetch("TEST_DB_HOST", "localhost") %>
  port: <%= ENV.fetch("TEST_DB_PORT", 5432) %>
  database: <%= ENV.fetch("TEST_DB_NAME", "inknowing_test") %>
  username: <%= ENV.fetch("TEST_DB_USER", "postgres") %>
  password: <%= ENV.fetch("TEST_DB_PASSWORD", "") %>

  # Test specific settings
  pool: 5
  min_messages: error

staging:
  <<: *default
  host: <%= ENV.fetch("STAGING_DB_HOST") %>
  port: <%= ENV.fetch("STAGING_DB_PORT", 5432) %>
  database: <%= ENV.fetch("STAGING_DB_NAME", "inknowing_staging") %>
  username: <%= ENV.fetch("STAGING_DB_USER") %>
  password: <%= ENV.fetch("STAGING_DB_PASSWORD") %>

  # Staging specific settings
  pool: 50
  sslmode: require

production:
  <<: *default
  host: <%= ENV.fetch("PROD_DB_HOST") %>
  port: <%= ENV.fetch("PROD_DB_PORT", 5432) %>
  database: <%= ENV.fetch("PROD_DB_NAME", "inknowing_production") %>
  username: <%= ENV.fetch("PROD_DB_USER") %>
  password: <%= ENV.fetch("PROD_DB_PASSWORD") %>

  # Production specific settings
  pool: 100
  sslmode: require
  prepared_statements: true
  advisory_locks: true

  # Read replica configuration (optional)
  replica:
    host: <%= ENV.fetch("PROD_DB_REPLICA_HOST", "") %>
    port: <%= ENV.fetch("PROD_DB_REPLICA_PORT", 5432) %>

# Connection URLs for different environments
connection_urls:
  development: "postgresql://postgres@localhost:5432/inknowing_db"
  test: "postgresql://postgres@localhost:5432/inknowing_test"
  staging: "postgresql://${STAGING_DB_USER}:${STAGING_DB_PASSWORD}@${STAGING_DB_HOST}:5432/inknowing_staging?sslmode=require"
  production: "postgresql://${PROD_DB_USER}:${PROD_DB_PASSWORD}@${PROD_DB_HOST}:5432/inknowing_production?sslmode=require"

# PgBouncer configuration (for connection pooling)
pgbouncer:
  enabled: true
  pool_mode: transaction  # session, transaction, statement
  max_client_connections: 1000
  default_pool_size: 25
  min_pool_size: 5
  reserve_pool_size: 5
  reserve_pool_timeout: 5
  max_db_connections: 100
  max_user_connections: 100
  server_lifetime: 3600
  server_idle_timeout: 600
  query_timeout: 120
  query_wait_timeout: 120
  client_idle_timeout: 0
  client_login_timeout: 60

# Monitoring and metrics
monitoring:
  enabled: true
  stats_users:
    - postgres
    - monitor
  metrics_port: 9187  # For postgres_exporter
  log_queries: true
  log_min_duration: 100  # milliseconds

# Maintenance settings
maintenance:
  autovacuum: true
  autovacuum_max_workers: 4
  autovacuum_naptime: 60  # seconds
  autovacuum_vacuum_threshold: 50
  autovacuum_analyze_threshold: 50
  autovacuum_vacuum_scale_factor: 0.2
  autovacuum_analyze_scale_factor: 0.1

# Performance tuning
performance:
  shared_buffers: "512MB"
  effective_cache_size: "2GB"
  work_mem: "8MB"
  maintenance_work_mem: "256MB"
  random_page_cost: 1.1
  effective_io_concurrency: 200
  max_parallel_workers: 8
  max_parallel_workers_per_gather: 4